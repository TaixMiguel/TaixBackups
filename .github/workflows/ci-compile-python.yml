on:
  pull_request:
    branches: [ main, dev ]

permissions:
  contents: read

jobs:
  build:
    name: Control de compilación python
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Instalación de dependencias
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  check-tag-exist:
    if: github.base_ref == 'main'
    name: Control de versión existente
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Establecer variables
        run: |
          APP_VERSION=$(awk '/APP_VERSION/{print $3}' app/consts.py)
          APP_VERSION=${APP_VERSION//\"/}
          echo "VERSION_SOURCE=$APP_VERSION" >> $GITHUB_ENV
      - uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with:
          tag: ${{ env.VERSION_SOURCE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Comprobación versión existente
        if: ${{ steps.checkTag.outputs.exists == 'true' }}
        run: exit 1
