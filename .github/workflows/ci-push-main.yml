on:
  push:
    branches: [ main ]

jobs:
  create-tag-release:
    name: Creación del tag y release asociados a la versión
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Establecer variables
        run: |
          APP_VERSION=$(awk '/APP_VERSION/{print $3}' app/consts.py)
          APP_VERSION=${APP_VERSION//\"/}
          echo "VERSION_SOURCE=$APP_VERSION" >> $GITHUB_ENV

      - uses: rickstaa/action-create-tag@v1
        name: Creación del tag
        with:
          tag: ${{ env.VERSION_SOURCE }}
          message: Tag ${{ env.VERSION_SOURCE }}

      - name: Creación de la release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION_SOURCE }}
          release_name: ${{ env.VERSION_SOURCE }}
          draft: true
          prerelease: false

  build-docker:
    name: Creación de la imagen Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Establecer variables
        run: |
          APP_VERSION=$(awk '/APP_VERSION/{print $3}' app/consts.py)
          APP_VERSION=${APP_VERSION//\"/}
          echo "VERSION_SOURCE=$APP_VERSION" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: omikel8
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (latest)
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: omikel8/taix_backups:latest
          platforms: linux/amd64,linux/arm64

      - name: Build and push (version)
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: omikel8/taix_backups:${{ env.VERSION_SOURCE }}
          platforms: linux/amd64,linux/arm64
